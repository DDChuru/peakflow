rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user has a specific role
    function hasRole(role) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        role in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return hasRole('admin');
    }
    
    // Helper function to check if user is developer
    function isDeveloper() {
      return hasRole('developer');
    }
    
    // Helper function to check if user can manage companies
    function canManageCompanies() {
      return isAdmin() || isDeveloper();
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own data
      allow read: if isAuthenticated() && request.auth.uid == userId;
      
      // Users can update their own data (except roles and companyId)
      allow update: if isAuthenticated() && 
        request.auth.uid == userId &&
        (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['roles', 'companyId']));
      
      // Only admins can read all users
      allow read: if isAdmin();
      
      // Only admins can create or delete users
      allow create, delete: if isAdmin();
      
      // Only admins can update any user (including roles and companyId)
      allow update: if isAdmin();
      
      // Allow user creation during signup
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Companies collection
    match /companies/{companyId} {
      // All authenticated users can read companies
      allow read: if isAuthenticated();
      
      // Only admins and developers can create companies
      allow create: if canManageCompanies();
      
      // Only admins and developers can update companies
      allow update: if canManageCompanies();
      
      // Only admins can delete companies
      allow delete: if isAdmin();
    }
    
    // Rate limits collection
    match /rateLimits/{document} {
      // Allow authenticated users to read/write their own rate limit entries
      allow read, write: if isAuthenticated();
    }
    
    // Password reset codes collection
    match /passwordResetCodes/{document} {
      // Allow authenticated users to read/write password reset codes
      allow read, write: if isAuthenticated();
    }
    
    // Activities collection for audit trail
    match /activities/{activityId} {
      // Allow authenticated users to read activities
      allow read: if isAuthenticated();

      // Only admins and developers can write activities
      allow create: if canManageCompanies();

      // Activities cannot be updated or deleted (audit trail integrity)
      allow update, delete: if false;
    }

    // Bank statements collection
    match /bank_statements/{statementId} {
      // Users can read statements for their own company or companies they have access to
      allow read: if isAuthenticated() && (
        canManageCompanies() || // Admins/developers can access all
        resource.data.userId == request.auth.uid || // Owner can access their uploads
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == resource.data.companyId)
      );

      // Users can create bank statements for their company
      allow create: if isAuthenticated() && (
        canManageCompanies() || // Admins/developers can create for any company
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         request.resource.data.userId == request.auth.uid)
      );

      // Users can update their own bank statements
      allow update: if isAuthenticated() && (
        canManageCompanies() || // Admins/developers can update any
        resource.data.userId == request.auth.uid
      );

      // Only admins can delete bank statements
      allow delete: if isAdmin();
    }

    // Usage tracking collection
    match /usage_tracking/{trackingId} {
      // Users can read their own usage data
      allow read: if isAuthenticated() && (
        isAdmin() || // Admins can see all usage
        resource.data.userId == request.auth.uid
      );

      // System can create usage tracking entries
      allow create: if isAuthenticated();

      // No updates or deletes allowed (audit trail)
      allow update, delete: if false;
    }

    // PDF extractions collection (for compatibility with existing PDF extraction)
    match /pdf_extractions/{extractionId} {
      // Users can read their own extractions
      allow read: if isAuthenticated() && (
        isAdmin() || // Admins can see all
        resource.data.userId == request.auth.uid
      );

      // Users can create extractions
      allow create: if isAuthenticated();

      // Users can update their own extractions
      allow update: if isAuthenticated() && (
        isAdmin() ||
        resource.data.userId == request.auth.uid
      );

      // Only admins can delete extractions
      allow delete: if isAdmin();
    }

    // Config collection (for API keys and system configuration)
    match /config/{configId} {
      // Only system/functions can read config (Firebase Functions have admin access)
      // Regular users cannot access API keys and sensitive config
      allow read, write: if false;
    }
  }
}